services:
  redis:
    image: redis:7-alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crossed
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      SERVER_MODE: worker
      NODE_ENV: production
      PGHOST: db
      PGUSER: postgres
      PGPORT: 5432
      PGPASSWORD: postgres
      POSTGRES_DB: crossed
      SECRET_ACCESS_TOKEN: adfhadfhadfh2j51jk
      SECRET_KEY_PATH: "../src/config/secret-key"
      REDIS_HOST: redis
      REDIS_URL: redis://redis:6379
      # Email configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_SECURE: ${SMTP_SECURE:-false}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM:-noreply@crossed.com}
    command: [ "yarn", "dev" ]
    networks:
      - app-network
    depends_on:
      - db
      - redis
  privacy-policy:
    build:
      context: ./privacy-policy
      dockerfile: Dockerfile
    container_name: crossed-privacy-policy
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:


networks:
  app-network:
    driver: bridge
