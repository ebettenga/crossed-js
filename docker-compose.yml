version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crossed
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   environment:
  #     NODE_ENV: production
  #     PGHOST: db
  #     PGUSER: postgres
  #     PGPORT: 5432
  #     PGPASSWORD: postgres
  #     POSTGRES_DB: crossed
  #     SECRET_ACCESS_TOKEN: adfhadfhadfh2j51jk
  #     SECRET_KEY_PATH: "../src/config/secret-key"
  #     REDIS_HOST: redis
  #   ports:
  #     - "3000:3000"
  #   command: ["yarn", "start"]
  #   networks:
  #     - app-network
  #   depends_on:
  #     - db
  #     - redis

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PGHOST: db
      PGUSER: postgres
      PGPORT: 5432
      PGPASSWORD: postgres
      POSTGRES_DB: crossed
      SECRET_ACCESS_TOKEN: adfhadfhadfh2j51jk
      SECRET_KEY_PATH: "../src/config/secret-key"
      REDIS_HOST: redis
      SERVER_MODE: worker
    command: ["yarn", "start"]
    networks:
      - app-network
    depends_on:
      - db
      - redis

volumes:
  redis_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
