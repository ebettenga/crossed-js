5e9701853c130814c4cb43628973d1a5
"use strict";

/* istanbul ignore next */
function cov_l3n0k7hur() {
  var path = "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/scripts/findConfigDir.ts";
  var hash = "01227360ae5cd96b95e7e0bb4274fe5a949c1a00";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/scripts/findConfigDir.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "4": {
        start: {
          line: 7,
          column: 13
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "6": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 84
        }
      },
      "8": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "10": {
        start: {
          line: 13,
          column: 31
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "11": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 16,
          column: 13
        }
      },
      "12": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "13": {
        start: {
          line: 17,
          column: 37
        },
        end: {
          line: 17,
          column: 110
        }
      },
      "14": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 20,
          column: 13
        }
      },
      "15": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "16": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 16
        }
      },
      "17": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 16
          },
          end: {
            line: 9,
            column: 17
          }
        },
        loc: {
          start: {
            line: 9,
            column: 52
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 32
          }
        }, {
          start: {
            line: 12,
            column: 36
          },
          end: {
            line: 12,
            column: 78
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 16,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 16,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "6": {
        loc: {
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 14,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: 14,
            column: 55
          },
          end: {
            line: 14,
            column: 102
          }
        }],
        line: 14
      },
      "7": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/scripts/findConfigDir.ts",
      mappings: ";;;;;;AAAA,4CAAoB;AACpB,gDAAwB;AAMxB,MAAM,OAAO,GAAG,CACd,SAAiB,EACjB,UAAkB,EAClB,OAA8B,EACf,EAAE;IACjB,MAAM,WAAW,GAAG,YAAE,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE,CAAC;QACjC,IAAI,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YACvE,MAAM,UAAU,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YACjE,IAAI,YAAE,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,YAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;gBACvE,OAAO,UAAU,CAAC;YACpB,CAAC;YACD,MAAM,gBAAgB,GAAG,OAAO,CAC9B,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,EACjC,UAAU,EACV,OAAO,CACR,CAAC;YACF,IAAI,gBAAgB,EAAE,CAAC;gBACrB,OAAO,gBAAgB,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEO,0BAAO",
      names: [],
      sources: ["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/scripts/findConfigDir.ts"],
      sourcesContent: ["import fs from 'fs';\nimport path from 'path';\n\ntype FindConfigDirOptions = {\n  ignoreDirs: string[];\n};\n\nconst findDir = (\n  startPath: string,\n  foldername: string,\n  options?: FindConfigDirOptions,\n): string | null => {\n  const directories = fs.readdirSync(startPath, { withFileTypes: true });\n  for (const dirent of directories) {\n    if (dirent.isDirectory() && !options?.ignoreDirs.includes(dirent.name)) {\n      const configPath = path.join(startPath, dirent.name, foldername);\n      if (fs.existsSync(configPath) && fs.statSync(configPath).isDirectory()) {\n        return configPath;\n      }\n      const nestedConfigPath = findDir(\n        path.join(startPath, dirent.name),\n        foldername,\n        options,\n      );\n      if (nestedConfigPath) {\n        return nestedConfigPath;\n      }\n    }\n  }\n  return null;\n};\n\nexport { findDir };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "01227360ae5cd96b95e7e0bb4274fe5a949c1a00"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l3n0k7hur = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_l3n0k7hur();
var __importDefault =
/* istanbul ignore next */
(cov_l3n0k7hur().s[0]++,
/* istanbul ignore next */
(cov_l3n0k7hur().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_l3n0k7hur().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_l3n0k7hur().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_l3n0k7hur().f[0]++;
  cov_l3n0k7hur().s[1]++;
  return /* istanbul ignore next */(cov_l3n0k7hur().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_l3n0k7hur().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_l3n0k7hur().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_l3n0k7hur().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_l3n0k7hur().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_l3n0k7hur().s[3]++;
exports.findDir = void 0;
const fs_1 =
/* istanbul ignore next */
(cov_l3n0k7hur().s[4]++, __importDefault(require("fs")));
const path_1 =
/* istanbul ignore next */
(cov_l3n0k7hur().s[5]++, __importDefault(require("path")));
/* istanbul ignore next */
cov_l3n0k7hur().s[6]++;
const findDir = (startPath, foldername, options) => {
  /* istanbul ignore next */
  cov_l3n0k7hur().f[1]++;
  const directories =
  /* istanbul ignore next */
  (cov_l3n0k7hur().s[7]++, fs_1.default.readdirSync(startPath, {
    withFileTypes: true
  }));
  /* istanbul ignore next */
  cov_l3n0k7hur().s[8]++;
  for (const dirent of directories) {
    /* istanbul ignore next */
    cov_l3n0k7hur().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_l3n0k7hur().b[4][0]++, dirent.isDirectory()) &&
    /* istanbul ignore next */
    (cov_l3n0k7hur().b[4][1]++, !options?.ignoreDirs.includes(dirent.name))) {
      /* istanbul ignore next */
      cov_l3n0k7hur().b[3][0]++;
      const configPath =
      /* istanbul ignore next */
      (cov_l3n0k7hur().s[10]++, path_1.default.join(startPath, dirent.name, foldername));
      /* istanbul ignore next */
      cov_l3n0k7hur().s[11]++;
      if (
      /* istanbul ignore next */
      (cov_l3n0k7hur().b[6][0]++, fs_1.default.existsSync(configPath)) &&
      /* istanbul ignore next */
      (cov_l3n0k7hur().b[6][1]++, fs_1.default.statSync(configPath).isDirectory())) {
        /* istanbul ignore next */
        cov_l3n0k7hur().b[5][0]++;
        cov_l3n0k7hur().s[12]++;
        return configPath;
      } else
      /* istanbul ignore next */
      {
        cov_l3n0k7hur().b[5][1]++;
      }
      const nestedConfigPath =
      /* istanbul ignore next */
      (cov_l3n0k7hur().s[13]++, findDir(path_1.default.join(startPath, dirent.name), foldername, options));
      /* istanbul ignore next */
      cov_l3n0k7hur().s[14]++;
      if (nestedConfigPath) {
        /* istanbul ignore next */
        cov_l3n0k7hur().b[7][0]++;
        cov_l3n0k7hur().s[15]++;
        return nestedConfigPath;
      } else
      /* istanbul ignore next */
      {
        cov_l3n0k7hur().b[7][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_l3n0k7hur().b[3][1]++;
    }
  }
  /* istanbul ignore next */
  cov_l3n0k7hur().s[16]++;
  return null;
};
/* istanbul ignore next */
cov_l3n0k7hur().s[17]++;
exports.findDir = findDir;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbDNuMGs3aHVyIiwiYWN0dWFsQ292ZXJhZ2UiLCJmc18xIiwicyIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJwYXRoXzEiLCJmaW5kRGlyIiwic3RhcnRQYXRoIiwiZm9sZGVybmFtZSIsIm9wdGlvbnMiLCJmIiwiZGlyZWN0b3JpZXMiLCJkZWZhdWx0IiwicmVhZGRpclN5bmMiLCJ3aXRoRmlsZVR5cGVzIiwiZGlyZW50IiwiYiIsImlzRGlyZWN0b3J5IiwiaWdub3JlRGlycyIsImluY2x1ZGVzIiwibmFtZSIsImNvbmZpZ1BhdGgiLCJqb2luIiwiZXhpc3RzU3luYyIsInN0YXRTeW5jIiwibmVzdGVkQ29uZmlnUGF0aCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvVXNlcnMvZXRoYW5iZXR0L0RvY3VtZW50cy9SZXBvcy9jcm9zc2VkLWpzL2JhY2tlbmQvc3JjL3NjcmlwdHMvZmluZENvbmZpZ0Rpci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbnR5cGUgRmluZENvbmZpZ0Rpck9wdGlvbnMgPSB7XG4gIGlnbm9yZURpcnM6IHN0cmluZ1tdO1xufTtcblxuY29uc3QgZmluZERpciA9IChcbiAgc3RhcnRQYXRoOiBzdHJpbmcsXG4gIGZvbGRlcm5hbWU6IHN0cmluZyxcbiAgb3B0aW9ucz86IEZpbmRDb25maWdEaXJPcHRpb25zLFxuKTogc3RyaW5nIHwgbnVsbCA9PiB7XG4gIGNvbnN0IGRpcmVjdG9yaWVzID0gZnMucmVhZGRpclN5bmMoc3RhcnRQYXRoLCB7IHdpdGhGaWxlVHlwZXM6IHRydWUgfSk7XG4gIGZvciAoY29uc3QgZGlyZW50IG9mIGRpcmVjdG9yaWVzKSB7XG4gICAgaWYgKGRpcmVudC5pc0RpcmVjdG9yeSgpICYmICFvcHRpb25zPy5pZ25vcmVEaXJzLmluY2x1ZGVzKGRpcmVudC5uYW1lKSkge1xuICAgICAgY29uc3QgY29uZmlnUGF0aCA9IHBhdGguam9pbihzdGFydFBhdGgsIGRpcmVudC5uYW1lLCBmb2xkZXJuYW1lKTtcbiAgICAgIGlmIChmcy5leGlzdHNTeW5jKGNvbmZpZ1BhdGgpICYmIGZzLnN0YXRTeW5jKGNvbmZpZ1BhdGgpLmlzRGlyZWN0b3J5KCkpIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZ1BhdGg7XG4gICAgICB9XG4gICAgICBjb25zdCBuZXN0ZWRDb25maWdQYXRoID0gZmluZERpcihcbiAgICAgICAgcGF0aC5qb2luKHN0YXJ0UGF0aCwgZGlyZW50Lm5hbWUpLFxuICAgICAgICBmb2xkZXJuYW1lLFxuICAgICAgICBvcHRpb25zLFxuICAgICAgKTtcbiAgICAgIGlmIChuZXN0ZWRDb25maWdQYXRoKSB7XG4gICAgICAgIHJldHVybiBuZXN0ZWRDb25maWdQYXRoO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbmV4cG9ydCB7IGZpbmREaXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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
