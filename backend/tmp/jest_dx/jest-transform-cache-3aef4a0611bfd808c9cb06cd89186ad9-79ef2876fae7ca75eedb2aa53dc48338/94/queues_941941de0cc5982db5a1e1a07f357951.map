{"version":3,"names":["cov_2gvtnaskbw","actualCoverage","s","bullmq_1","require","config_1","exports","emailQueue","Queue","connection","config","redis","default","statusCleanupQueue","defaultJobOptions","removeOnComplete","removeOnFail","gameTimeoutQueue","gameInactivityQueue","upsertJobScheduler","every","status","cleanup","interval","name","data","opts"],"sources":["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/jobs/queues.ts"],"sourcesContent":["import { Queue } from \"bullmq\";\nimport { config } from \"../config/config\";\n\n// Define your job types here\nexport interface EmailJobData {\n  to: string;\n  subject: string;\n  body: string;\n}\n\nexport interface GameTimeoutJobData {\n  roomId: number;\n}\n\nexport interface GameInactivityJobData {\n  roomId: number;\n  lastActivityTimestamp?: number;\n}\n\n// Create and export queues\nexport const emailQueue = new Queue<EmailJobData>(\"email\", {\n  connection: config.redis.default,\n});\n\nexport const statusCleanupQueue = new Queue(\"status-cleanup\", {\n  connection: config.redis.default,\n  defaultJobOptions: {\n    removeOnComplete: true,\n    removeOnFail: 1000,\n  },\n});\n\nexport const gameTimeoutQueue = new Queue<GameTimeoutJobData>(\"game-timeout\", {\n  connection: config.redis.default,\n  defaultJobOptions: {\n    removeOnComplete: true,\n    removeOnFail: 1000,\n  },\n});\n\nexport const gameInactivityQueue = new Queue<GameInactivityJobData>(\n  \"game-inactivity\",\n  {\n    connection: config.redis.default,\n    defaultJobOptions: {\n      removeOnComplete: true,\n      removeOnFail: 1000,\n    },\n  },\n);\n\n// Add initial repeatable job\nstatusCleanupQueue.upsertJobScheduler(\n  \"status-cleanup\",\n  {\n    every: config.status.cleanup.interval,\n  },\n  {\n    name: \"status-cleanup\",\n    data: {},\n    opts: {}, // Optional additional job options\n  },\n);\n\n// Add more queues as needed\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BG;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;AA9BH,MAAAC,QAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAC,QAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAAE,OAAA;AAkBA;AAAA;AAAAJ,cAAA,GAAAE,CAAA;AACaI,OAAA,CAAAC,UAAU,GAAG,IAAIJ,QAAA,CAAAK,KAAK,CAAe,OAAO,EAAE;EACzDC,UAAU,EAAEJ,QAAA,CAAAK,MAAM,CAACC,KAAK,CAACC;CAC1B,CAAC;AAAC;AAAAZ,cAAA,GAAAE,CAAA;AAEUI,OAAA,CAAAO,kBAAkB,GAAG,IAAIV,QAAA,CAAAK,KAAK,CAAC,gBAAgB,EAAE;EAC5DC,UAAU,EAAEJ,QAAA,CAAAK,MAAM,CAACC,KAAK,CAACC,OAAO;EAChCE,iBAAiB,EAAE;IACjBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;;CAEjB,CAAC;AAAC;AAAAhB,cAAA,GAAAE,CAAA;AAEUI,OAAA,CAAAW,gBAAgB,GAAG,IAAId,QAAA,CAAAK,KAAK,CAAqB,cAAc,EAAE;EAC5EC,UAAU,EAAEJ,QAAA,CAAAK,MAAM,CAACC,KAAK,CAACC,OAAO;EAChCE,iBAAiB,EAAE;IACjBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;;CAEjB,CAAC;AAAC;AAAAhB,cAAA,GAAAE,CAAA;AAEUI,OAAA,CAAAY,mBAAmB,GAAG,IAAIf,QAAA,CAAAK,KAAK,CAC1C,iBAAiB,EACjB;EACEC,UAAU,EAAEJ,QAAA,CAAAK,MAAM,CAACC,KAAK,CAACC,OAAO;EAChCE,iBAAiB,EAAE;IACjBC,gBAAgB,EAAE,IAAI;IACtBC,YAAY,EAAE;;CAEjB,CACF;AAED;AAAA;AAAAhB,cAAA,GAAAE,CAAA;AACAI,OAAA,CAAAO,kBAAkB,CAACM,kBAAkB,CACnC,gBAAgB,EAChB;EACEC,KAAK,EAAEf,QAAA,CAAAK,MAAM,CAACW,MAAM,CAACC,OAAO,CAACC;CAC9B,EACD;EACEC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,EAAE;EACRC,IAAI,EAAE,EAAE,CAAE;CACX,CACF;AAED","ignoreList":[]}
