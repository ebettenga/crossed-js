35e8ec9edacb1de82106053366fc87bc
"use strict";

/* istanbul ignore next */
function cov_1nd9nhdtxf() {
  var path = "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-local.ts";
  var hash = "26ba861ead2923aff24ecca84db006975f1b8da6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-local.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 24
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 30,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-local.ts",
      mappings: ";;;AAEa,QAAA,MAAM,GAAG;IACpB,MAAM,EAAE;QACN,SAAS,EAAE;YACT,MAAM,EAAE,aAAa;YACrB,OAAO,EAAE,EAAE;SACZ;KACF;IACD,EAAE,EAAE;QACF,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM;QACxB,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QAClC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM;QAC5B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;QAChC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACjC,WAAW,EAAE,KAAK;QAClB,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,CAAC,wBAAwB,CAAC;QACpC,UAAU,EAAE,CAAC,0BAA0B,CAAC;QACxC,WAAW,EAAE,CAAC,2BAA2B,CAAC;KACd;IAC9B,IAAI,EAAE;QACJ,iBAAiB,EAAE,oBAAoB;QACvC,sBAAsB,EAAE,IAAI;QAC5B,eAAe,EAAE,IAAI;KACtB;IACD,aAAa,EAAE,qBAAqB;CACrC,CAAC",
      names: [],
      sources: ["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-local.ts"],
      sourcesContent: ["import { PostgresConnectionOptions } from \"typeorm/driver/postgres/PostgresConnectionOptions\";\n\nexport const config = {\n  logger: {\n    transport: {\n      target: \"pino-pretty\",\n      options: {},\n    },\n  },\n  db: {\n    type: \"postgres\",\n    host: process.env.PGHOST,\n    port: parseInt(process.env.PGPORT),\n    username: process.env.PGUSER,\n    password: process.env.PGPASSWORD,\n    database: process.env.POSTGRES_DB,\n    synchronize: false,\n    logging: false,\n    entities: [\"./src/entities/**/*.ts\"],\n    migrations: [\"./src/migrations/**/*.ts\"],\n    subscribers: [\"./src/subscribers/**/*.ts\"],\n  } as PostgresConnectionOptions,\n  auth: {\n    secretAccessToken: \"aklwj*$%rngbak4a43\",\n    authRefreshTokenExpiry: \"3w\",\n    authTokenExpiry: \"1h\",\n  },\n  secretKeyPath: \"./config/secret-key\",\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "26ba861ead2923aff24ecca84db006975f1b8da6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nd9nhdtxf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nd9nhdtxf();
cov_1nd9nhdtxf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nd9nhdtxf().s[1]++;
exports.config = void 0;
/* istanbul ignore next */
cov_1nd9nhdtxf().s[2]++;
exports.config = {
  logger: {
    transport: {
      target: "pino-pretty",
      options: {}
    }
  },
  db: {
    type: "postgres",
    host: process.env.PGHOST,
    port: parseInt(process.env.PGPORT),
    username: process.env.PGUSER,
    password: process.env.PGPASSWORD,
    database: process.env.POSTGRES_DB,
    synchronize: false,
    logging: false,
    entities: ["./src/entities/**/*.ts"],
    migrations: ["./src/migrations/**/*.ts"],
    subscribers: ["./src/subscribers/**/*.ts"]
  },
  auth: {
    secretAccessToken: "aklwj*$%rngbak4a43",
    authRefreshTokenExpiry: "3w",
    authTokenExpiry: "1h"
  },
  secretKeyPath: "./config/secret-key"
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW5kOW5oZHR4ZiIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJjb25maWciLCJsb2dnZXIiLCJ0cmFuc3BvcnQiLCJ0YXJnZXQiLCJvcHRpb25zIiwiZGIiLCJ0eXBlIiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJQR0hPU1QiLCJwb3J0IiwicGFyc2VJbnQiLCJQR1BPUlQiLCJ1c2VybmFtZSIsIlBHVVNFUiIsInBhc3N3b3JkIiwiUEdQQVNTV09SRCIsImRhdGFiYXNlIiwiUE9TVEdSRVNfREIiLCJzeW5jaHJvbml6ZSIsImxvZ2dpbmciLCJlbnRpdGllcyIsIm1pZ3JhdGlvbnMiLCJzdWJzY3JpYmVycyIsImF1dGgiLCJzZWNyZXRBY2Nlc3NUb2tlbiIsImF1dGhSZWZyZXNoVG9rZW5FeHBpcnkiLCJhdXRoVG9rZW5FeHBpcnkiLCJzZWNyZXRLZXlQYXRoIl0sInNvdXJjZXMiOlsiL1VzZXJzL2V0aGFuYmV0dC9Eb2N1bWVudHMvUmVwb3MvY3Jvc3NlZC1qcy9iYWNrZW5kL3NyYy9jb25maWcvY29uZmlnLWxvY2FsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvc3RncmVzQ29ubmVjdGlvbk9wdGlvbnMgfSBmcm9tIFwidHlwZW9ybS9kcml2ZXIvcG9zdGdyZXMvUG9zdGdyZXNDb25uZWN0aW9uT3B0aW9uc1wiO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBsb2dnZXI6IHtcbiAgICB0cmFuc3BvcnQ6IHtcbiAgICAgIHRhcmdldDogXCJwaW5vLXByZXR0eVwiLFxuICAgICAgb3B0aW9uczoge30sXG4gICAgfSxcbiAgfSxcbiAgZGI6IHtcbiAgICB0eXBlOiBcInBvc3RncmVzXCIsXG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuUEdIT1NULFxuICAgIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52LlBHUE9SVCksXG4gICAgdXNlcm5hbWU6IHByb2Nlc3MuZW52LlBHVVNFUixcbiAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuUEdQQVNTV09SRCxcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfREIsXG4gICAgc3luY2hyb25pemU6IGZhbHNlLFxuICAgIGxvZ2dpbmc6IGZhbHNlLFxuICAgIGVudGl0aWVzOiBbXCIuL3NyYy9lbnRpdGllcy8qKi8qLnRzXCJdLFxuICAgIG1pZ3JhdGlvbnM6IFtcIi4vc3JjL21pZ3JhdGlvbnMvKiovKi50c1wiXSxcbiAgICBzdWJzY3JpYmVyczogW1wiLi9zcmMvc3Vic2NyaWJlcnMvKiovKi50c1wiXSxcbiAgfSBhcyBQb3N0Z3Jlc0Nvbm5lY3Rpb25PcHRpb25zLFxuICBhdXRoOiB7XG4gICAgc2VjcmV0QWNjZXNzVG9rZW46IFwiYWtsd2oqJCVybmdiYWs0YTQzXCIsXG4gICAgYXV0aFJlZnJlc2hUb2tlbkV4cGlyeTogXCIzd1wiLFxuICAgIGF1dGhUb2tlbkV4cGlyeTogXCIxaFwiLFxuICB9LFxuICBzZWNyZXRLZXlQYXRoOiBcIi4vY29uZmlnL3NlY3JldC1rZXlcIixcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBY0k7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7Ozs7OztBQVpTQyxPQUFBLENBQUFDLE1BQU0sR0FBRztFQUNwQkMsTUFBTSxFQUFFO0lBQ05DLFNBQVMsRUFBRTtNQUNUQyxNQUFNLEVBQUUsYUFBYTtNQUNyQkMsT0FBTyxFQUFFOztHQUVaO0VBQ0RDLEVBQUUsRUFBRTtJQUNGQyxJQUFJLEVBQUUsVUFBVTtJQUNoQkMsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsTUFBTTtJQUN4QkMsSUFBSSxFQUFFQyxRQUFRLENBQUNKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSSxNQUFNLENBQUM7SUFDbENDLFFBQVEsRUFBRU4sT0FBTyxDQUFDQyxHQUFHLENBQUNNLE1BQU07SUFDNUJDLFFBQVEsRUFBRVIsT0FBTyxDQUFDQyxHQUFHLENBQUNRLFVBQVU7SUFDaENDLFFBQVEsRUFBRVYsT0FBTyxDQUFDQyxHQUFHLENBQUNVLFdBQVc7SUFDakNDLFdBQVcsRUFBRSxLQUFLO0lBQ2xCQyxPQUFPLEVBQUUsS0FBSztJQUNkQyxRQUFRLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQztJQUNwQ0MsVUFBVSxFQUFFLENBQUMsMEJBQTBCLENBQUM7SUFDeENDLFdBQVcsRUFBRSxDQUFDLDJCQUEyQjtHQUNiO0VBQzlCQyxJQUFJLEVBQUU7SUFDSkMsaUJBQWlCLEVBQUUsb0JBQW9CO0lBQ3ZDQyxzQkFBc0IsRUFBRSxJQUFJO0lBQzVCQyxlQUFlLEVBQUU7R0FDbEI7RUFDREMsYUFBYSxFQUFFO0NBQ2hCIiwiaWdub3JlTGlzdCI6W119
