4bf735aeb91bae75f1c28e49fee08ef1
"use strict";

/* istanbul ignore next */
function cov_2clz1bmqo1() {
  var path = "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/Crossword.ts";
  var hash = "4a4447eebaa92b3a493665caf4e452c9f6b4ee59";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/Crossword.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "15": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "16": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "17": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "18": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "19": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "20": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "21": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "22": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "23": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "24": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 61,
          column: 43
        }
      },
      "25": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 65,
          column: 40
        }
      },
      "26": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 69,
          column: 39
        }
      },
      "27": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 73,
          column: 40
        }
      },
      "28": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "29": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 81,
          column: 48
        }
      },
      "30": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 85,
          column: 44
        }
      },
      "31": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 89,
          column: 44
        }
      },
      "32": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "33": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "34": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "35": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 104,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/Crossword.ts",
      mappings: ";;;;;;;;;;;;AAAA,qCAAiE;AAQ1D,IAAM,SAAS,GAAf,MAAM,SAAS;IAEpB,EAAE,CAAS;IAGX,KAAK,CAAQ;IAGb,OAAO,CAGL;IAGF,MAAM,CAAS;IAGf,UAAU,CAAS;IAGnB,YAAY,CAAS;IAGrB,OAAO,CAAW;IAGlB,IAAI,CAAO;IAGX,GAAG,CAAS;IAGZ,IAAI,CAAW;IAGf,QAAQ,CAAW;IAGnB,YAAY,CAAU;IAGtB,QAAQ,CAAS;IAGjB,QAAQ,CAAS;IAGjB,KAAK,CAAS;IAGd,OAAO,CAAS;IAGhB,KAAK,CAAS;CACf,CAAA;AAtDY,8BAAS;AAEpB;IADC,IAAA,gCAAsB,GAAE;;qCACd;AAGX;IADC,IAAA,gBAAM,EAAC,OAAO,CAAC;;wCACH;AAGb;IADC,IAAA,gBAAM,EAAC,OAAO,CAAC;;0CAId;AAGF;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;yCACpB;AAGf;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;6CAChB;AAGnB;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+CACd;AAGrB;IADC,IAAA,gBAAM,EAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;0CACzB;AAGlB;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;8BAC7B,IAAI;uCAAC;AAGX;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;sCACvB;AAGZ;IADC,IAAA,gBAAM,EAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;uCAC5B;AAGf;IADC,IAAA,gBAAM,EAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CACxB;AAGnB;IADC,IAAA,gBAAM,EAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;+CAChB;AAGtB;IADC,IAAA,gBAAM,EAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CACjB;AAGjB;IADC,IAAA,gBAAM,EAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;2CACjB;AAGjB;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;wCACrB;AAGd;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;0CACnB;AAGhB;IADC,IAAA,gBAAM,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;wCACrB;oBArDH,SAAS;IADrB,IAAA,gBAAM,GAAE;GACI,SAAS,CAsDrB",
      names: [],
      sources: ["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/Crossword.ts"],
      sourcesContent: ["import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\nexport type Clues = {\n  across: string[];\n  down: string[];\n};\n\n@Entity()\nexport class Crossword {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('jsonb')\n  clues: Clues;\n\n  @Column('jsonb')\n  answers: {\n    across: string[];\n    down: string[];\n  };\n\n  @Column('text', { nullable: true })\n  author: string;\n\n  @Column('text', { nullable: true })\n  created_by: string;\n\n  @Column('text', { nullable: true })\n  creator_link: string;\n\n  @Column('simple-array', { nullable: true })\n  circles: number[];\n\n  @Column('date', { nullable: true })\n  date: Date;\n\n  @Column('text', { nullable: true })\n  dow: string;\n\n  @Column('simple-array', { nullable: true })\n  grid: string[];\n\n  @Column('simple-array', { nullable: true })\n  gridnums: string[];\n\n  @Column('boolean', { nullable: true })\n  shadecircles: boolean;\n\n  @Column('int', { nullable: true })\n  col_size: number;\n\n  @Column('int', { nullable: true })\n  row_size: number;\n\n  @Column('text', { nullable: true })\n  jnote: string;\n\n  @Column('text', { nullable: true })\n  notepad: string;\n\n  @Column('text', { nullable: true })\n  title: string;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4a4447eebaa92b3a493665caf4e452c9f6b4ee59"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2clz1bmqo1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2clz1bmqo1();
var __decorate =
/* istanbul ignore next */
(cov_2clz1bmqo1().s[0]++,
/* istanbul ignore next */
(cov_2clz1bmqo1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2clz1bmqo1().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_2clz1bmqo1().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_2clz1bmqo1().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_2clz1bmqo1().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_2clz1bmqo1().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_2clz1bmqo1().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_2clz1bmqo1().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_2clz1bmqo1().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_2clz1bmqo1().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_2clz1bmqo1().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_2clz1bmqo1().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2clz1bmqo1().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_2clz1bmqo1().b[3][0]++;
    cov_2clz1bmqo1().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_2clz1bmqo1().b[3][1]++;
    cov_2clz1bmqo1().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_2clz1bmqo1().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_2clz1bmqo1().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_2clz1bmqo1().b[5][0]++;
        cov_2clz1bmqo1().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_2clz1bmqo1().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_2clz1bmqo1().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_2clz1bmqo1().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_2clz1bmqo1().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_2clz1bmqo1().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_2clz1bmqo1().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_2clz1bmqo1().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_2clz1bmqo1().s[9]++;
  return /* istanbul ignore next */(cov_2clz1bmqo1().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_2clz1bmqo1().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_2clz1bmqo1().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_2clz1bmqo1().s[10]++,
/* istanbul ignore next */
(cov_2clz1bmqo1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2clz1bmqo1().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_2clz1bmqo1().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_2clz1bmqo1().f[1]++;
  cov_2clz1bmqo1().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2clz1bmqo1().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_2clz1bmqo1().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_2clz1bmqo1().b[11][0]++;
    cov_2clz1bmqo1().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_2clz1bmqo1().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_2clz1bmqo1().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2clz1bmqo1().s[14]++;
exports.Crossword = void 0;
const typeorm_1 =
/* istanbul ignore next */
(cov_2clz1bmqo1().s[15]++, require("typeorm"));
/* istanbul ignore next */
cov_2clz1bmqo1().s[16]++;
let Crossword = class Crossword {
  id;
  clues;
  answers;
  author;
  created_by;
  creator_link;
  circles;
  date;
  dow;
  grid;
  gridnums;
  shadecircles;
  col_size;
  row_size;
  jnote;
  notepad;
  title;
};
/* istanbul ignore next */
cov_2clz1bmqo1().s[17]++;
exports.Crossword = Crossword;
/* istanbul ignore next */
cov_2clz1bmqo1().s[18]++;
__decorate([(0, typeorm_1.PrimaryGeneratedColumn)(), __metadata("design:type", Number)], Crossword.prototype, "id", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[19]++;
__decorate([(0, typeorm_1.Column)('jsonb'), __metadata("design:type", Object)], Crossword.prototype, "clues", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[20]++;
__decorate([(0, typeorm_1.Column)('jsonb'), __metadata("design:type", Object)], Crossword.prototype, "answers", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[21]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "author", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[22]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "created_by", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[23]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "creator_link", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[24]++;
__decorate([(0, typeorm_1.Column)('simple-array', {
  nullable: true
}), __metadata("design:type", Array)], Crossword.prototype, "circles", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[25]++;
__decorate([(0, typeorm_1.Column)('date', {
  nullable: true
}), __metadata("design:type", Date)], Crossword.prototype, "date", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[26]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "dow", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[27]++;
__decorate([(0, typeorm_1.Column)('simple-array', {
  nullable: true
}), __metadata("design:type", Array)], Crossword.prototype, "grid", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[28]++;
__decorate([(0, typeorm_1.Column)('simple-array', {
  nullable: true
}), __metadata("design:type", Array)], Crossword.prototype, "gridnums", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[29]++;
__decorate([(0, typeorm_1.Column)('boolean', {
  nullable: true
}), __metadata("design:type", Boolean)], Crossword.prototype, "shadecircles", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[30]++;
__decorate([(0, typeorm_1.Column)('int', {
  nullable: true
}), __metadata("design:type", Number)], Crossword.prototype, "col_size", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[31]++;
__decorate([(0, typeorm_1.Column)('int', {
  nullable: true
}), __metadata("design:type", Number)], Crossword.prototype, "row_size", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[32]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "jnote", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[33]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "notepad", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[34]++;
__decorate([(0, typeorm_1.Column)('text', {
  nullable: true
}), __metadata("design:type", String)], Crossword.prototype, "title", void 0);
/* istanbul ignore next */
cov_2clz1bmqo1().s[35]++;
exports.Crossword = Crossword = __decorate([(0, typeorm_1.Entity)()], Crossword);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmNsejFibXFvMSIsImFjdHVhbENvdmVyYWdlIiwidHlwZW9ybV8xIiwicyIsInJlcXVpcmUiLCJDcm9zc3dvcmQiLCJpZCIsImNsdWVzIiwiYW5zd2VycyIsImF1dGhvciIsImNyZWF0ZWRfYnkiLCJjcmVhdG9yX2xpbmsiLCJjaXJjbGVzIiwiZGF0ZSIsImRvdyIsImdyaWQiLCJncmlkbnVtcyIsInNoYWRlY2lyY2xlcyIsImNvbF9zaXplIiwicm93X3NpemUiLCJqbm90ZSIsIm5vdGVwYWQiLCJ0aXRsZSIsImV4cG9ydHMiLCJfX2RlY29yYXRlIiwiUHJpbWFyeUdlbmVyYXRlZENvbHVtbiIsIkNvbHVtbiIsIm51bGxhYmxlIiwiRGF0ZSIsIkVudGl0eSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9ldGhhbmJldHQvRG9jdW1lbnRzL1JlcG9zL2Nyb3NzZWQtanMvYmFja2VuZC9zcmMvZW50aXRpZXMvQ3Jvc3N3b3JkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgUHJpbWFyeUdlbmVyYXRlZENvbHVtbiwgQ29sdW1uIH0gZnJvbSAndHlwZW9ybSc7XG5cbmV4cG9ydCB0eXBlIENsdWVzID0ge1xuICBhY3Jvc3M6IHN0cmluZ1tdO1xuICBkb3duOiBzdHJpbmdbXTtcbn07XG5cbkBFbnRpdHkoKVxuZXhwb3J0IGNsYXNzIENyb3Nzd29yZCB7XG4gIEBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uKClcbiAgaWQ6IG51bWJlcjtcblxuICBAQ29sdW1uKCdqc29uYicpXG4gIGNsdWVzOiBDbHVlcztcblxuICBAQ29sdW1uKCdqc29uYicpXG4gIGFuc3dlcnM6IHtcbiAgICBhY3Jvc3M6IHN0cmluZ1tdO1xuICAgIGRvd246IHN0cmluZ1tdO1xuICB9O1xuXG4gIEBDb2x1bW4oJ3RleHQnLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGF1dGhvcjogc3RyaW5nO1xuXG4gIEBDb2x1bW4oJ3RleHQnLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGNyZWF0ZWRfYnk6IHN0cmluZztcblxuICBAQ29sdW1uKCd0ZXh0JywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBjcmVhdG9yX2xpbms6IHN0cmluZztcblxuICBAQ29sdW1uKCdzaW1wbGUtYXJyYXknLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGNpcmNsZXM6IG51bWJlcltdO1xuXG4gIEBDb2x1bW4oJ2RhdGUnLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGRhdGU6IERhdGU7XG5cbiAgQENvbHVtbigndGV4dCcsIHsgbnVsbGFibGU6IHRydWUgfSlcbiAgZG93OiBzdHJpbmc7XG5cbiAgQENvbHVtbignc2ltcGxlLWFycmF5JywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBncmlkOiBzdHJpbmdbXTtcblxuICBAQ29sdW1uKCdzaW1wbGUtYXJyYXknLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGdyaWRudW1zOiBzdHJpbmdbXTtcblxuICBAQ29sdW1uKCdib29sZWFuJywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBzaGFkZWNpcmNsZXM6IGJvb2xlYW47XG5cbiAgQENvbHVtbignaW50JywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBjb2xfc2l6ZTogbnVtYmVyO1xuXG4gIEBDb2x1bW4oJ2ludCcsIHsgbnVsbGFibGU6IHRydWUgfSlcbiAgcm93X3NpemU6IG51bWJlcjtcblxuICBAQ29sdW1uKCd0ZXh0JywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICBqbm90ZTogc3RyaW5nO1xuXG4gIEBDb2x1bW4oJ3RleHQnLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIG5vdGVwYWQ6IHN0cmluZztcblxuICBAQ29sdW1uKCd0ZXh0JywgeyBudWxsYWJsZTogdHJ1ZSB9KVxuICB0aXRsZTogc3RyaW5nO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFhZTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lB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
