c88a1206cec9f0fd8606d6ce52f948fd
"use strict";

/* istanbul ignore next */
function cov_2nofiy3kdc() {
  var path = "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-common.ts";
  var hash = "4e7a181053297b3d440de34d74ea27cbccde7260";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-common.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 78
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 78,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 17
          },
          end: {
            line: 4,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 41
          },
          end: {
            line: 4,
            column: 71
          }
        }, {
          start: {
            line: 4,
            column: 74
          },
          end: {
            line: 4,
            column: 78
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 36
          }
        }, {
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 60,
            column: 51
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 41
          }
        }, {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 51
          }
        }],
        line: 61
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 22
          },
          end: {
            line: 62,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 22
          },
          end: {
            line: 62,
            column: 40
          }
        }, {
          start: {
            line: 62,
            column: 44
          },
          end: {
            line: 62,
            column: 53
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 40
          }
        }, {
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 63,
            column: 46
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 14
          },
          end: {
            line: 68,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 14
          },
          end: {
            line: 68,
            column: 35
          }
        }, {
          start: {
            line: 68,
            column: 39
          },
          end: {
            line: 68,
            column: 55
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 44
          }
        }, {
          start: {
            line: 69,
            column: 48
          },
          end: {
            line: 69,
            column: 53
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 35
          }
        }, {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 75,
            column: 60
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 10
          },
          end: {
            line: 77,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 10
          },
          end: {
            line: 77,
            column: 33
          }
        }, {
          start: {
            line: 77,
            column: 37
          },
          end: {
            line: 77,
            column: 42
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {},
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-common.ts",
      mappings: ";;;AAEA,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAElE,QAAA,YAAY,GAAG;IAC1B,GAAG,EAAE;QACH,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,SAAS;KAChB;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;QAClD,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;QACjD,WAAW,EAAE,IAAI;KAClB;IACD,IAAI,EAAE;QACJ,MAAM,EAAE;YACN,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,CAAC,CAAC;YACb,OAAO,EAAE,CAAC,GAAG;SACd;QACD,GAAG,EAAE;YACH,WAAW,EAAE,EAAE;YACf,mBAAmB,EAAE,GAAG;YACxB,iBAAiB,EAAE,GAAG;YACtB,oBAAoB,EAAE,EAAE;SACzB;QACD,UAAU,EAAE;YACV,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;SAChB;QACD,SAAS,EAAE;YACT,kBAAkB,EAAE,YAAY;SACjC;QACD,OAAO,EAAE;YACP,OAAO,EAAE,MAAM,EAAE,4BAA4B;YAC7C,UAAU,EAAE;gBACV,OAAO,EAAE,IAAI,EAAE,4BAA4B;gBAC3C,OAAO,EAAE,IAAI,EAAE,4BAA4B;gBAC3C,uDAAuD;gBACvD,0EAA0E;gBAC1E,gBAAgB,EAAE,GAAG;gBACrB,8DAA8D;gBAC9D,cAAc,EAAE,GAAG,EAAE,MAAM;aAC5B;SACF;KACF;IACD,MAAM,EAAE;QACN,OAAO,EAAE;YACP,QAAQ,EAAE,KAAK,EAAE,aAAa;YAC9B,gBAAgB,EAAE,MAAM,EAAE,YAAY;SACvC;KACF;IACD,KAAK,EAAE;QACL,OAAO,EAAE;YACP,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,QAAQ,EAAE,QAAQ,IAAI,WAAW;YACvC,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,IAAI,MAAM,CAAC;YACxC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,IAAI,SAAS;YACzC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,IAAI,EAAE;SACnB;QACjB,OAAO,EAAE,KAAK,EAAE,mBAAmB;KACpC;IACD,KAAK,EAAE;QACL,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,gBAAgB;QAC/C,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,KAAK,CAAC;QAC9C,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,MAAM;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;YAC3B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;SAC5B;QACD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,qBAAqB;KACrD;IACD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,KAAK,EAAE,qBAAqB;CAC9D,CAAC",
      names: [],
      sources: ["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/config/config-common.ts"],
      sourcesContent: ["import { RedisOptions } from \"ioredis\";\n\nconst redisURL = process.env.REDIS_URL ? new URL(process.env.REDIS_URL) : null;\n\nexport const commonConfig = {\n  api: {\n    prefix: \"/api\",\n    port: 3000,\n    host: \"0.0.0.0\",\n  },\n  cors: {\n    origin: \"*\",\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"],\n    allowedHeaders: [\"Content-Type\", \"Authorization\"],\n    credentials: true,\n  },\n  game: {\n    points: {\n      correct: 3,\n      incorrect: -1,\n      forfeit: -300,\n    },\n    elo: {\n      kFactorBase: 25,\n      winStreakMultiplier: 0.1,\n      maxWinStreakBonus: 0.3,\n      gamesPlayedDampening: 30,\n    },\n    maxPlayers: {\n      \"1v1\": 2,\n      \"2v2\": 4,\n      \"free4all\": 4,\n      \"time_trial\": 1,\n    },\n    crossword: {\n      firstCrosswordDate: \"2000-01-01\",\n    },\n    timeout: {\n      pending: 120000, // 2 minutes in milliseconds\n      inactivity: {\n        initial: 5000, // 2 seconds initial timeout\n        minimum: 5000, // 2 seconds minimum timeout\n        // The rate at which the timeout decreases (percentage)\n        // e.g., 0.2 means timeout reduces by 20% for each 10% of puzzle completed\n        accelerationRate: 0.2,\n        // Percentage of puzzle completion between timeout adjustments\n        completionStep: 0.1, // 10%\n      },\n    },\n  },\n  status: {\n    cleanup: {\n      interval: 30000, // 30 seconds\n      heartbeatTimeout: 300000, // 5 minutes\n    },\n  },\n  redis: {\n    default: {\n      family: 0,\n      host: redisURL?.hostname || \"localhost\",\n      port: parseInt(redisURL?.port || \"6379\"),\n      username: redisURL?.username || \"default\",\n      password: redisURL?.password || \"\",\n    } as RedisOptions,\n    gameTTL: 86400, // 1 day in seconds\n  },\n  email: {\n    host: process.env.SMTP_HOST || \"smtp.gmail.com\",\n    port: parseInt(process.env.SMTP_PORT || \"587\"),\n    secure: process.env.SMTP_SECURE === \"true\",\n    auth: {\n      user: process.env.SMTP_USER,\n      pass: process.env.SMTP_PASS,\n    },\n    from: process.env.SMTP_FROM || \"noreply@crossed.com\",\n  },\n  mode: process.env.SERVER_MODE || \"api\", // 'api' or 'worker',\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4e7a181053297b3d440de34d74ea27cbccde7260"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nofiy3kdc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nofiy3kdc();
cov_2nofiy3kdc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2nofiy3kdc().s[1]++;
exports.commonConfig = void 0;
const redisURL =
/* istanbul ignore next */
(cov_2nofiy3kdc().s[2]++, process.env.REDIS_URL ?
/* istanbul ignore next */
(cov_2nofiy3kdc().b[0][0]++, new URL(process.env.REDIS_URL)) :
/* istanbul ignore next */
(cov_2nofiy3kdc().b[0][1]++, null));
/* istanbul ignore next */
cov_2nofiy3kdc().s[3]++;
exports.commonConfig = {
  api: {
    prefix: "/api",
    port: 3000,
    host: "0.0.0.0"
  },
  cors: {
    origin: "*",
    methods: ["GET", "POST", "PUT", "DELETE", "PATCH"],
    allowedHeaders: ["Content-Type", "Authorization"],
    credentials: true
  },
  game: {
    points: {
      correct: 3,
      incorrect: -1,
      forfeit: -300
    },
    elo: {
      kFactorBase: 25,
      winStreakMultiplier: 0.1,
      maxWinStreakBonus: 0.3,
      gamesPlayedDampening: 30
    },
    maxPlayers: {
      "1v1": 2,
      "2v2": 4,
      "free4all": 4,
      "time_trial": 1
    },
    crossword: {
      firstCrosswordDate: "2000-01-01"
    },
    timeout: {
      pending: 120000,
      // 2 minutes in milliseconds
      inactivity: {
        initial: 5000,
        // 2 seconds initial timeout
        minimum: 5000,
        // 2 seconds minimum timeout
        // The rate at which the timeout decreases (percentage)
        // e.g., 0.2 means timeout reduces by 20% for each 10% of puzzle completed
        accelerationRate: 0.2,
        // Percentage of puzzle completion between timeout adjustments
        completionStep: 0.1 // 10%
      }
    }
  },
  status: {
    cleanup: {
      interval: 30000,
      // 30 seconds
      heartbeatTimeout: 300000 // 5 minutes
    }
  },
  redis: {
    default: {
      family: 0,
      host:
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[1][0]++, redisURL?.hostname) ||
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[1][1]++, "localhost"),
      port: parseInt(
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[2][0]++, redisURL?.port) ||
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[2][1]++, "6379")),
      username:
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[3][0]++, redisURL?.username) ||
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[3][1]++, "default"),
      password:
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[4][0]++, redisURL?.password) ||
      /* istanbul ignore next */
      (cov_2nofiy3kdc().b[4][1]++, "")
    },
    gameTTL: 86400 // 1 day in seconds
  },
  email: {
    host:
    /* istanbul ignore next */
    (cov_2nofiy3kdc().b[5][0]++, process.env.SMTP_HOST) ||
    /* istanbul ignore next */
    (cov_2nofiy3kdc().b[5][1]++, "smtp.gmail.com"),
    port: parseInt(
    /* istanbul ignore next */
    (cov_2nofiy3kdc().b[6][0]++, process.env.SMTP_PORT) ||
    /* istanbul ignore next */
    (cov_2nofiy3kdc().b[6][1]++, "587")),
    secure: process.env.SMTP_SECURE === "true",
    auth: {
      user: process.env.SMTP_USER,
      pass: process.env.SMTP_PASS
    },
    from:
    /* istanbul ignore next */
    (cov_2nofiy3kdc().b[7][0]++, process.env.SMTP_FROM) ||
    /* istanbul ignore next */
    (cov_2nofiy3kdc().b[7][1]++, "noreply@crossed.com")
  },
  mode:
  /* istanbul ignore next */
  (cov_2nofiy3kdc().b[8][0]++, process.env.SERVER_MODE) ||
  /* istanbul ignore next */
  (cov_2nofiy3kdc().b[8][1]++, "api") // 'api' or 'worker',
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
