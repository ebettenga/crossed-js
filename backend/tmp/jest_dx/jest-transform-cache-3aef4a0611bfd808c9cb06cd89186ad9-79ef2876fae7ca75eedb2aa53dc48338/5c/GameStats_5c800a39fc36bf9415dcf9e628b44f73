2026deda947bdba7bed26290a136dd68
"use strict";

/* istanbul ignore next */
function cov_hpsg3poxo() {
  var path = "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/GameStats.ts";
  var hash = "ed13788ce9ae39bb7e0e6772aacc16dae93916d0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/GameStats.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 3,
          column: 34
        },
        end: {
          line: 3,
          column: 125
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "4": {
        start: {
          line: 4,
          column: 79
        },
        end: {
          line: 4,
          column: 131
        }
      },
      "5": {
        start: {
          line: 5,
          column: 9
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "6": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "7": {
        start: {
          line: 5,
          column: 58
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "8": {
        start: {
          line: 5,
          column: 81
        },
        end: {
          line: 5,
          column: 150
        }
      },
      "9": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "10": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "11": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "12": {
        start: {
          line: 9,
          column: 79
        },
        end: {
          line: 9,
          column: 109
        }
      },
      "13": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "14": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "15": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "16": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "17": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "18": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 34,
          column: 38
        }
      },
      "19": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "20": {
        start: {
          line: 36,
          column: 47
        },
        end: {
          line: 36,
          column: 61
        }
      },
      "21": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "22": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "23": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "24": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 54,
          column: 50
        }
      },
      "25": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 58,
          column: 52
        }
      },
      "26": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 62,
          column: 44
        }
      },
      "27": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "28": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "29": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 74,
          column: 45
        }
      },
      "30": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 78,
          column: 55
        }
      },
      "31": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 81,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 2,
            column: 47
          }
        },
        loc: {
          start: {
            line: 2,
            column: 87
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 38
          }
        },
        loc: {
          start: {
            line: 36,
            column: 47
          },
          end: {
            line: 36,
            column: 61
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 2,
            column: 22
          }
        }, {
          start: {
            line: 2,
            column: 26
          },
          end: {
            line: 2,
            column: 41
          }
        }, {
          start: {
            line: 2,
            column: 46
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 3,
            column: 48
          }
        }, {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 51
          },
          end: {
            line: 3,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 67
          },
          end: {
            line: 3,
            column: 118
          }
        }, {
          start: {
            line: 3,
            column: 121
          },
          end: {
            line: 3,
            column: 125
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 150
          }
        }],
        line: 4
      },
      "4": {
        loc: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 35
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 4,
            column: 77
          }
        }],
        line: 4
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 58
          },
          end: {
            line: 5,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 85
          },
          end: {
            line: 5,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        }, {
          start: {
            line: 5,
            column: 148
          },
          end: {
            line: 5,
            column: 149
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 94
          },
          end: {
            line: 5,
            column: 98
          }
        }, {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "8": {
        loc: {
          start: {
            line: 5,
            column: 101
          },
          end: {
            line: 5,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 109
          },
          end: {
            line: 5,
            column: 126
          }
        }, {
          start: {
            line: 5,
            column: 129
          },
          end: {
            line: 5,
            column: 143
          }
        }],
        line: 5
      },
      "9": {
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 16
          }
        }, {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 62
          }
        }],
        line: 6
      },
      "10": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "11": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "12": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 35
          }
        }, {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/GameStats.ts",
      mappings: ";;;;;;;;;;;;AAAA,qCAMiB;AAKV,IAAM,SAAS,GAAf,MAAM,SAAS;IAEpB,EAAE,CAAS;IAEX,aAAa;IAEb,IAAI,CAAO;IAGX,MAAM,CAAS;IAGf,IAAI,CAAO;IAGX,MAAM,CAAS;IAGf,cAAc,CAAS;IAGvB,gBAAgB,CAAS;IAGzB,QAAQ,CAAU;IAGlB,SAAS,CAAS;IAGlB,SAAS,CAAS;IAGlB,SAAS,CAAO;IAEhB,mDAAmD;IAEnD,mBAAmB,CAKf;CACL,CAAA;AA3CY,8BAAS;AAEpB;IADC,IAAA,gCAAsB,GAAE;;qCACd;AAIX;IADC,IAAA,mBAAS,EAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;;uCACjC;AAGX;IADC,IAAA,gBAAM,EAAC,SAAS,CAAC;;yCACH;AAGf;IADC,IAAA,mBAAS,EAAC,MAAM,CAAC;;uCACP;AAGX;IADC,IAAA,gBAAM,EAAC,SAAS,CAAC;;yCACH;AAGf;IADC,IAAA,gBAAM,EAAC,SAAS,CAAC;;iDACK;AAGvB;IADC,IAAA,gBAAM,EAAC,SAAS,CAAC;;mDACO;AAGzB;IADC,IAAA,gBAAM,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;;2CACpB;AAGlB;IADC,IAAA,gBAAM,EAAC,OAAO,CAAC;;4CACE;AAGlB;IADC,IAAA,gBAAM,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;;4CAChB;AAGlB;IADC,IAAA,0BAAgB,GAAE;8BACR,IAAI;4CAAC;AAIhB;IADC,IAAA,gBAAM,EAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;sDAMtC;oBA1CO,SAAS;IADrB,IAAA,gBAAM,GAAE;GACI,SAAS,CA2CrB",
      names: [],
      sources: ["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/entities/GameStats.ts"],
      sourcesContent: ["import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport type { User } from \"./User\";\nimport type { Room } from \"./Room\";\n\n@Entity()\nexport class GameStats {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  // @ts-ignore\n  @ManyToOne(\"User\", (user) => user.gameStats)\n  user: User;\n\n  @Column(\"integer\")\n  userId: number;\n\n  @ManyToOne(\"Room\")\n  room: Room;\n\n  @Column(\"integer\")\n  roomId: number;\n\n  @Column(\"integer\")\n  correctGuesses: number;\n\n  @Column(\"integer\")\n  incorrectGuesses: number;\n\n  @Column(\"boolean\", { default: false })\n  isWinner: boolean;\n\n  @Column(\"float\")\n  eloAtGame: number;\n\n  @Column(\"integer\", { default: 0 })\n  winStreak: number;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  // Store coordinates and letters of correct guesses\n  @Column(\"simple-json\", { nullable: true })\n  correctGuessDetails: {\n    row: number;\n    col: number;\n    letter: string;\n    timestamp: Date;\n  }[];\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed13788ce9ae39bb7e0e6772aacc16dae93916d0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hpsg3poxo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hpsg3poxo();
var __decorate =
/* istanbul ignore next */
(cov_hpsg3poxo().s[0]++,
/* istanbul ignore next */
(cov_hpsg3poxo().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_hpsg3poxo().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_hpsg3poxo().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_hpsg3poxo().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_hpsg3poxo().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_hpsg3poxo().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_hpsg3poxo().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_hpsg3poxo().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_hpsg3poxo().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_hpsg3poxo().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_hpsg3poxo().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_hpsg3poxo().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_hpsg3poxo().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_hpsg3poxo().b[3][0]++;
    cov_hpsg3poxo().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_hpsg3poxo().b[3][1]++;
    cov_hpsg3poxo().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_hpsg3poxo().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_hpsg3poxo().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_hpsg3poxo().b[5][0]++;
        cov_hpsg3poxo().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_hpsg3poxo().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_hpsg3poxo().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_hpsg3poxo().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_hpsg3poxo().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_hpsg3poxo().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_hpsg3poxo().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_hpsg3poxo().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_hpsg3poxo().s[9]++;
  return /* istanbul ignore next */(cov_hpsg3poxo().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_hpsg3poxo().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_hpsg3poxo().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_hpsg3poxo().s[10]++,
/* istanbul ignore next */
(cov_hpsg3poxo().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_hpsg3poxo().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_hpsg3poxo().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_hpsg3poxo().f[1]++;
  cov_hpsg3poxo().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_hpsg3poxo().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_hpsg3poxo().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_hpsg3poxo().b[11][0]++;
    cov_hpsg3poxo().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_hpsg3poxo().b[11][1]++;
  }
}));
/* istanbul ignore next */
cov_hpsg3poxo().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_hpsg3poxo().s[14]++;
exports.GameStats = void 0;
const typeorm_1 =
/* istanbul ignore next */
(cov_hpsg3poxo().s[15]++, require("typeorm"));
/* istanbul ignore next */
cov_hpsg3poxo().s[16]++;
let GameStats = class GameStats {
  id;
  // @ts-ignore
  user;
  userId;
  room;
  roomId;
  correctGuesses;
  incorrectGuesses;
  isWinner;
  eloAtGame;
  winStreak;
  createdAt;
  // Store coordinates and letters of correct guesses
  correctGuessDetails;
};
/* istanbul ignore next */
cov_hpsg3poxo().s[17]++;
exports.GameStats = GameStats;
/* istanbul ignore next */
cov_hpsg3poxo().s[18]++;
__decorate([(0, typeorm_1.PrimaryGeneratedColumn)(), __metadata("design:type", Number)], GameStats.prototype, "id", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[19]++;
__decorate([(0, typeorm_1.ManyToOne)("User", user => {
  /* istanbul ignore next */
  cov_hpsg3poxo().f[2]++;
  cov_hpsg3poxo().s[20]++;
  return user.gameStats;
}), __metadata("design:type", Function)], GameStats.prototype, "user", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[21]++;
__decorate([(0, typeorm_1.Column)("integer"), __metadata("design:type", Number)], GameStats.prototype, "userId", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[22]++;
__decorate([(0, typeorm_1.ManyToOne)("Room"), __metadata("design:type", Function)], GameStats.prototype, "room", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[23]++;
__decorate([(0, typeorm_1.Column)("integer"), __metadata("design:type", Number)], GameStats.prototype, "roomId", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[24]++;
__decorate([(0, typeorm_1.Column)("integer"), __metadata("design:type", Number)], GameStats.prototype, "correctGuesses", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[25]++;
__decorate([(0, typeorm_1.Column)("integer"), __metadata("design:type", Number)], GameStats.prototype, "incorrectGuesses", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[26]++;
__decorate([(0, typeorm_1.Column)("boolean", {
  default: false
}), __metadata("design:type", Boolean)], GameStats.prototype, "isWinner", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[27]++;
__decorate([(0, typeorm_1.Column)("float"), __metadata("design:type", Number)], GameStats.prototype, "eloAtGame", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[28]++;
__decorate([(0, typeorm_1.Column)("integer", {
  default: 0
}), __metadata("design:type", Number)], GameStats.prototype, "winStreak", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[29]++;
__decorate([(0, typeorm_1.CreateDateColumn)(), __metadata("design:type", Date)], GameStats.prototype, "createdAt", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[30]++;
__decorate([(0, typeorm_1.Column)("simple-json", {
  nullable: true
}), __metadata("design:type", Array)], GameStats.prototype, "correctGuessDetails", void 0);
/* istanbul ignore next */
cov_hpsg3poxo().s[31]++;
exports.GameStats = GameStats = __decorate([(0, typeorm_1.Entity)()], GameStats);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaHBzZzNwb3hvIiwiYWN0dWFsQ292ZXJhZ2UiLCJ0eXBlb3JtXzEiLCJzIiwicmVxdWlyZSIsIkdhbWVTdGF0cyIsImlkIiwidXNlciIsInVzZXJJZCIsInJvb20iLCJyb29tSWQiLCJjb3JyZWN0R3Vlc3NlcyIsImluY29ycmVjdEd1ZXNzZXMiLCJpc1dpbm5lciIsImVsb0F0R2FtZSIsIndpblN0cmVhayIsImNyZWF0ZWRBdCIsImNvcnJlY3RHdWVzc0RldGFpbHMiLCJleHBvcnRzIiwiX19kZWNvcmF0ZSIsIlByaW1hcnlHZW5lcmF0ZWRDb2x1bW4iLCJNYW55VG9PbmUiLCJmIiwiZ2FtZVN0YXRzIiwiQ29sdW1uIiwiZGVmYXVsdCIsIkNyZWF0ZURhdGVDb2x1bW4iLCJEYXRlIiwibnVsbGFibGUiLCJFbnRpdHkiXSwic291cmNlcyI6WyIvVXNlcnMvZXRoYW5iZXR0L0RvY3VtZW50cy9SZXBvcy9jcm9zc2VkLWpzL2JhY2tlbmQvc3JjL2VudGl0aWVzL0dhbWVTdGF0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb2x1bW4sXG4gIENyZWF0ZURhdGVDb2x1bW4sXG4gIEVudGl0eSxcbiAgTWFueVRvT25lLFxuICBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uLFxufSBmcm9tIFwidHlwZW9ybVwiO1xuaW1wb3J0IHR5cGUgeyBVc2VyIH0gZnJvbSBcIi4vVXNlclwiO1xuaW1wb3J0IHR5cGUgeyBSb29tIH0gZnJvbSBcIi4vUm9vbVwiO1xuXG5ARW50aXR5KClcbmV4cG9ydCBjbGFzcyBHYW1lU3RhdHMge1xuICBAUHJpbWFyeUdlbmVyYXRlZENvbHVtbigpXG4gIGlkOiBudW1iZXI7XG5cbiAgLy8gQHRzLWlnbm9yZVxuICBATWFueVRvT25lKFwiVXNlclwiLCAodXNlcikgPT4gdXNlci5nYW1lU3RhdHMpXG4gIHVzZXI6IFVzZXI7XG5cbiAgQENvbHVtbihcImludGVnZXJcIilcbiAgdXNlcklkOiBudW1iZXI7XG5cbiAgQE1hbnlUb09uZShcIlJvb21cIilcbiAgcm9vbTogUm9vbTtcblxuICBAQ29sdW1uKFwiaW50ZWdlclwiKVxuICByb29tSWQ6IG51bWJlcjtcblxuICBAQ29sdW1uKFwiaW50ZWdlclwiKVxuICBjb3JyZWN0R3Vlc3NlczogbnVtYmVyO1xuXG4gIEBDb2x1bW4oXCJpbnRlZ2VyXCIpXG4gIGluY29ycmVjdEd1ZXNzZXM6IG51bWJlcjtcblxuICBAQ29sdW1uKFwiYm9vbGVhblwiLCB7IGRlZmF1bHQ6IGZhbHNlIH0pXG4gIGlzV2lubmVyOiBib29sZWFuO1xuXG4gIEBDb2x1bW4oXCJmbG9hdFwiKVxuICBlbG9BdEdhbWU6IG51bWJlcjtcblxuICBAQ29sdW1uKFwiaW50ZWdlclwiLCB7IGRlZmF1bHQ6IDAgfSlcbiAgd2luU3RyZWFrOiBudW1iZXI7XG5cbiAgQENyZWF0ZURhdGVDb2x1bW4oKVxuICBjcmVhdGVkQXQ6IERhdGU7XG5cbiAgLy8gU3RvcmUgY29vcmRpbmF0ZXMgYW5kIGxldHRlcnMgb2YgY29ycmVjdCBndWVzc2VzXG4gIEBDb2x1bW4oXCJzaW1wbGUtanNvblwiLCB7IG51bGxhYmxlOiB0cnVlIH0pXG4gIGNvcnJlY3RHdWVzc0RldGFpbHM6IHtcbiAgICByb3c6IG51bWJlcjtcbiAgICBjb2w6IG51bWJlcjtcbiAgICBsZXR0ZXI6IHN0cmluZztcbiAgICB0aW1lc3RhbXA6IERhdGU7XG4gIH1bXTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlRTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFmRixNQUFBRSxTQUFBO0FBQUE7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
