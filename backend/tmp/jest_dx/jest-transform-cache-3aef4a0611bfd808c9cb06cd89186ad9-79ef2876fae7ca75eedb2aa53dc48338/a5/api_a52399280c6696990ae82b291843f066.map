{"version":3,"names":["cov_29z4lq1gj4","actualCoverage","s","NotFoundError","Error","statusCode","constructor","message","f","name","exports","UnauthorizedError","ForbiddenError","BadRequestError","UserNotFoundError","userId","UniqueConstraintError"],"sources":["/Users/ethanbett/Documents/Repos/crossed-js/backend/src/errors/api.ts"],"sourcesContent":["export class NotFoundError extends Error {\n  statusCode: number;\n  constructor(message: string) {\n    super(message);\n    this.name = \"NotFoundError\";\n    this.statusCode = 404;\n  }\n}\n\nexport class UnauthorizedError extends Error {\n  statusCode: number;\n  constructor(message: string) {\n    super(message);\n    this.name = \"UnauthorizedError\";\n    this.statusCode = 401;\n  }\n}\n\nexport class ForbiddenError extends Error {\n  statusCode: number;\n  constructor(message: string) {\n    super(message);\n    this.name = \"ForbiddenError\";\n    this.statusCode = 403;\n  }\n}\n\nexport class BadRequestError extends Error {\n  statusCode: number;\n  constructor(message: string) {\n    super(message);\n    this.name = \"BadRequestError\";\n    this.statusCode = 400;\n  }\n}\n\nexport class UserNotFoundError extends Error {\n  constructor(userId: string) {\n    super(`User with ID ${userId} not found`);\n    this.name = \"UserNotFoundError\";\n  }\n}\n\nexport class UniqueConstraintError extends Error {\n  statusCode: number;\n  constructor(message: string) {\n    super(message);\n    this.name = \"UniqueConstraintError\";\n    this.statusCode = 409;\n  }\n}\n"],"mappings":"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","ignoreList":[]}
